{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Genesis Rig\\\\Desktop\\\\timer_frontend\\\\timer-frontend\\\\timer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Genesis Rig\\\\Desktop\\\\timer_frontend\\\\timer-frontend\\\\timer\\\\src\\\\components\\\\Timer.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nfunction Timer() {\n  const calculateTimeLeft = () => {\n    const difference = +new Date(\"2020-01-12\") - +new Date();\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor(difference / (1000 * 60 * 60) % 24),\n        minutes: Math.floor(difference / 1000 / 60 % 60),\n        seconds: Math.floor(difference / 1000 % 60)\n      };\n    }\n\n    return timeLeft;\n  };\n\n  const _useState = useState(calculateTimeLeft()),\n        _useState2 = _slicedToArray(_useState, 2),\n        timeLeft = _useState2[0],\n        setTimeLeft = _useState2[1];\n\n  useEffect(() => {\n    setTimeout(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n  });\n  const timerComponents = [];\n  Object.keys(timeLeft).forEach(interval => {\n    if (!timeLeft[interval]) {\n      return;\n    }\n\n    timerComponents.push(React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, timeLeft[interval], \" \", interval, \" \"));\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Alligator.io New Year's 2020 Countdown\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"With React Hooks!\"), timerComponents.length ? timerComponents : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Time's up!\"));\n}\n\nexport default Timer;","map":{"version":3,"sources":["C:/Users/Genesis Rig/Desktop/timer_frontend/timer-frontend/timer/src/components/Timer.js"],"names":["React","useEffect","useState","ReactDOM","Timer","calculateTimeLeft","difference","Date","timeLeft","days","Math","floor","hours","minutes","seconds","setTimeLeft","setTimeout","timerComponents","Object","keys","forEach","interval","push","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,SAASC,KAAT,GAAiB;AAMb,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,UAAMC,UAAU,GAAG,CAAC,IAAIC,IAAJ,CAAS,YAAT,CAAD,GAA0B,CAAC,IAAIA,IAAJ,EAA9C;AACA,QAAIC,QAAQ,GAAG,EAAf;;AAEA,QAAIF,UAAU,GAAG,CAAjB,EAAoB;AAChBE,MAAAA,QAAQ,GAAG;AACPC,QAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWL,UAAU,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAArB,CADC;AAEPM,QAAAA,KAAK,EAAEF,IAAI,CAACC,KAAL,CAAYL,UAAU,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAX,GAAkC,EAA7C,CAFA;AAGPO,QAAAA,OAAO,EAAEH,IAAI,CAACC,KAAL,CAAYL,UAAU,GAAG,IAAb,GAAoB,EAArB,GAA2B,EAAtC,CAHF;AAIPQ,QAAAA,OAAO,EAAEJ,IAAI,CAACC,KAAL,CAAYL,UAAU,GAAG,IAAd,GAAsB,EAAjC;AAJF,OAAX;AAMH;;AAED,WAAOE,QAAP;AACH,GAdD;;AANa,oBAsBmBN,QAAQ,CAACG,iBAAiB,EAAlB,CAtB3B;AAAA;AAAA,QAsBNG,QAtBM;AAAA,QAsBIO,WAtBJ;;AA2Bbd,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,WAAW,CAACV,iBAAiB,EAAlB,CAAX;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAJQ,CAAT;AAWA,QAAMY,eAAe,GAAG,EAAxB;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYX,QAAZ,EAAsBY,OAAtB,CAA8BC,QAAQ,IAAI;AACtC,QAAI,CAACb,QAAQ,CAACa,QAAD,CAAb,EAAyB;AACrB;AACH;;AAEDJ,IAAAA,eAAe,CAACK,IAAhB,CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKd,QAAQ,CAACa,QAAD,CADb,OAC0BA,QAD1B,EACoC,GADpC,CADJ;AAKH,GAVD;AAmBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ,EAGKJ,eAAe,CAACM,MAAhB,GAAyBN,eAAzB,GAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHhD,CADJ;AAOH;;AAED,eAAeb,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nfunction Timer() {\r\n\r\n\r\n\r\n\r\n\r\n    const calculateTimeLeft = () => {\r\n        const difference = +new Date(\"2020-01-12\") - +new Date();\r\n        let timeLeft = {};\r\n\r\n        if (difference > 0) {\r\n            timeLeft = {\r\n                days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n                hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n                minutes: Math.floor((difference / 1000 / 60) % 60),\r\n                seconds: Math.floor((difference / 1000) % 60)\r\n            };\r\n        }\r\n\r\n        return timeLeft;\r\n    };\r\n\r\n    const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setTimeLeft(calculateTimeLeft());\r\n        }, 1000);\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    const timerComponents = [];\r\n\r\n    Object.keys(timeLeft).forEach(interval => {\r\n        if (!timeLeft[interval]) {\r\n            return;\r\n        }\r\n\r\n        timerComponents.push(\r\n            <span>\r\n                {timeLeft[interval]} {interval}{\" \"}\r\n            </span>\r\n        );\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Alligator.io New Year's 2020 Countdown</h1>\r\n            <h2>With React Hooks!</h2>\r\n            {timerComponents.length ? timerComponents : <span>Time's up!</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Timer;\r\n"]},"metadata":{},"sourceType":"module"}