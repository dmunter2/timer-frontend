{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Genesis Rig\\\\Desktop\\\\timer_frontend\\\\timer-frontend\\\\timer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Genesis Rig\\\\Desktop\\\\timer_frontend\\\\timer-frontend\\\\timer\\\\src\\\\components\\\\Timer-Holders\\\\CalculateTimeLeft.js\";\nimport React, { useState } from 'react';\nimport Style from 'styled-components';\nconst DIV = Style.div`\ndisplay: flex;\nflex-direction: row;\n// width: 400px;\ncolor: white;\njustify-content: space-around;\n`;\nconst DIV1 = Style.div`\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-between;\n`;\nconst H1 = Style.h3`\ncolor: black;\n`;\nconst NEW = Style.h4`\nfont-size: 1.3rem;\nmargin-right: 10px;\ncolor: black;\n`;\n\nconst CalculateTimeLeft = props => {\n  const _useState = useState('display'),\n        _useState2 = _slicedToArray(_useState, 2),\n        display = _useState2[0],\n        setDisplay = _useState2[1];\n\n  const difference = +new Date(`${props.year}-${props.month}-${props.day}`) - +new Date(); // console.log(difference);\n  // console.log(+new Date(`${props.year}-${props.month}-${props.day}`))\n\n  let timeLeft = {};\n\n  if (difference > 0) {\n    timeLeft = {\n      years: Math.floor(difference / (1000 * 60 * 60 * 24 * 365)),\n      days: Math.floor(difference / (1000 * 60 * 60 * 24) % 365),\n      hours: Math.floor(difference / (1000 * 60 * 60) % 24),\n      minutes: Math.floor(difference / 1000 / 60 % 60),\n      seconds: Math.floor(difference / 1000 % 60)\n    };\n  }\n\n  return React.createElement(DIV, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(DIV1, {\n    className: display,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, timeLeft.years, React.createElement(H1, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Years\")), React.createElement(DIV1, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(NEW, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, timeLeft.days), React.createElement(H1, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Days\")), React.createElement(DIV1, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(NEW, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, timeLeft.hours), React.createElement(H1, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Hours\")), React.createElement(DIV1, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(NEW, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, timeLeft.minutes), React.createElement(H1, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Minutes\")), React.createElement(DIV1, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(NEW, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, timeLeft.seconds), React.createElement(H1, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Seconds\")));\n};\n\nexport default CalculateTimeLeft;","map":{"version":3,"sources":["C:/Users/Genesis Rig/Desktop/timer_frontend/timer-frontend/timer/src/components/Timer-Holders/CalculateTimeLeft.js"],"names":["React","useState","Style","DIV","div","DIV1","H1","h3","NEW","h4","CalculateTimeLeft","props","display","setDisplay","difference","Date","year","month","day","timeLeft","years","Math","floor","days","hours","minutes","seconds"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Style from 'styled-components';\r\n\r\nconst DIV = Style.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\n// width: 400px;\r\ncolor: white;\r\njustify-content: space-around;\r\n`\r\nconst DIV1 = Style.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nalign-items: center;\r\njustify-content: space-between;\r\n`\r\n\r\n\r\nconst H1 = Style.h3`\r\ncolor: black;\r\n`\r\nconst NEW = Style.h4`\r\nfont-size: 1.3rem;\r\nmargin-right: 10px;\r\ncolor: black;\r\n`\r\n\r\nconst CalculateTimeLeft = (props) => {\r\n\r\n\r\n    const [display, setDisplay] = useState('display')\r\n\r\n    const difference = +new Date(`${props.year}-${props.month}-${props.day}`) - +new Date();\r\n\r\n    // console.log(difference);\r\n    // console.log(+new Date(`${props.year}-${props.month}-${props.day}`))\r\n    let timeLeft = {};\r\n\r\n    if (difference > 0) {\r\n        timeLeft = {\r\n            years: Math.floor(difference / (1000 * 60 * 60 * 24 * 365)),\r\n            days: Math.floor(difference / (1000 * 60 * 60 * 24) % 365),\r\n            hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n            minutes: Math.floor((difference / 1000 / 60) % 60),\r\n            seconds: Math.floor((difference / 1000) % 60)\r\n        };\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <DIV>\r\n\r\n            <DIV1 className={display}>\r\n                {timeLeft.years}\r\n                <H1>Years</H1>\r\n            </DIV1>\r\n            <DIV1>\r\n                <NEW>{timeLeft.days}</NEW>\r\n                <H1>Days</H1>\r\n            </DIV1>\r\n\r\n\r\n        \r\n            <DIV1>\r\n                <NEW>\r\n                    {timeLeft.hours}\r\n                </NEW>\r\n                <H1>Hours</H1>\r\n            </DIV1>\r\n\r\n\r\n\r\n            <DIV1>\r\n                <NEW>\r\n                    {timeLeft.minutes}\r\n                </NEW>\r\n                <H1>Minutes</H1>\r\n\r\n            </DIV1>\r\n\r\n            <DIV1>\r\n                <NEW>\r\n                    {timeLeft.seconds}\r\n                </NEW>\r\n                <H1>Seconds</H1>\r\n\r\n            </DIV1>\r\n\r\n\r\n\r\n\r\n        </DIV>\r\n    );\r\n};\r\n\r\nexport default CalculateTimeLeft;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}