{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Genesis Rig\\\\Desktop\\\\timer_frontend\\\\timer-frontend\\\\timer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Genesis Rig\\\\Desktop\\\\timer_frontend\\\\timer-frontend\\\\timer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Genesis Rig\\\\Desktop\\\\timer_frontend\\\\timer-frontend\\\\timer\\\\src\\\\components\\\\TimerForm.js\";\nimport React, { useState } from 'react';\nimport Style from 'styled-components';\nimport xout from './xout.png';\nconst DIV = Style.div`\nwidth: 450px;\nborder: 1px solid white;\npadding: .5%;\n`;\nconst DIV2 = Style.div`\ndisplay: flex;\nflex-direction: row;\njustify-content: center;\nalign-items: center;`;\nconst H1 = Style.h4`\nmargin-left: 1%;\nmargin-right: 1%;\ncolor: white;\n`;\nconst H4 = Style.h4`\ncolor: white;\nmargin: 0;\nfont-weight: 200;\n\n\n\n`;\nconst DIV4 = Style.div`\n\n`;\nconst DIV3 = Style.div`\n\n`;\nconst CREATE = Style.div`\nmargin-top: 20px;\ndisplay: flex;\njustify-content: center;\n\n\n`;\nconst FORM = Style.form`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n\n\n`;\nconst INPUT = Style.input`\nwidth: 50px;\nborder: 1px solid white;\nborder-radius: 5px;\nheight: 20px;\n`;\nconst DIV1 = Style.div`\n`;\nconst HEADER = Style.div`\ndisplay: flex;\nfont - family: 'Source Sans Pro', sans - serif;\nfont-size: 2.5rem;\nfont-weight: 700;\ncolor: #009a9a;\n\n`;\nconst BUTTON1 = Style.button`\nwidth: 150px;\nbackground-color: teal;\nborder: none;\ncolor: white;\nborder-radius: 7px;\nheight: 40px;\nmargin-bottom:15px;\n`;\nconst INPUT2 = Style.input`\nwidth: 190px;\nheight: 30px;\n`; //fonts \n//\n// font - family: 'Poppins', sans - serif;---- regular fonts\n// font - family: 'Source Sans Pro', sans - serif;\n\nconst CreateTimer = props => {\n  const _useState = useState({\n    year: '',\n    month: '',\n    day: '',\n    description: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        time = _useState2[0],\n        setTime = _useState2[1];\n\n  const _useState3 = useState('no-display'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        display = _useState4[0],\n        setDisplay = _useState4[1];\n\n  const submitHandler = e => {\n    e.preventDefault(); //defining the date the user entered\n\n    let day = Number(time.day);\n    let month = Number(time.month);\n    let year = Number(time.year);\n    let customerDate = +new Date(`${year}-${month}-${day}`);\n    let myCurrentDate = Date.now();\n\n    if (customerDate > myCurrentDate) {\n      let newTime = _objectSpread({}, time, {\n        id: Date.now()\n      });\n\n      props.addnewTime(newTime);\n    } else {\n      setDisplay('display');\n    }\n  };\n\n  const changeHandler = e => {\n    e.preventDefault();\n    return setTime(_objectSpread({}, time, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const hideDisplay = e => {\n    e.preventDefault();\n    setDisplay('no-display');\n  };\n\n  return React.createElement(DIV, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(HEADER, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(DIV1, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Countdown\")), React.createElement(CREATE, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(FORM, {\n    onSubmit: submitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(DIV3, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(INPUT2, {\n    className: \"text-area\",\n    type: \"text\",\n    placeholder: \"Event\",\n    onChange: changeHandler,\n    name: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  })), React.createElement(DIV2, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(INPUT, {\n    type: \"text\",\n    placeholder: \"month\",\n    onChange: changeHandler,\n    name: \"month\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), React.createElement(H1, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"/\"), React.createElement(INPUT, {\n    type: \"text\",\n    placeholder: \"day\",\n    onChange: changeHandler,\n    name: \"day\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), React.createElement(H1, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"/\"), React.createElement(INPUT, {\n    type: \"text\",\n    placeholder: \"year\",\n    onChange: changeHandler,\n    name: \"year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  })), React.createElement(DIV4, {\n    className: display,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(H4, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Please Enter a future date\"), React.createElement(\"img\", {\n    alt: \"x\",\n    src: xout,\n    onClick: hideDisplay,\n    className: \"delete-photo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  })), React.createElement(BUTTON1, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, \"Create Event\"))));\n};\n\nexport default CreateTimer;","map":{"version":3,"sources":["C:/Users/Genesis Rig/Desktop/timer_frontend/timer-frontend/timer/src/components/TimerForm.js"],"names":["React","useState","Style","xout","DIV","div","DIV2","H1","h4","H4","DIV4","DIV3","CREATE","FORM","form","INPUT","input","DIV1","HEADER","BUTTON1","button","INPUT2","CreateTimer","props","year","month","day","description","time","setTime","display","setDisplay","submitHandler","e","preventDefault","Number","customerDate","Date","myCurrentDate","now","newTime","id","addnewTime","changeHandler","target","name","value","hideDisplay"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Style from 'styled-components';\r\nimport xout from './xout.png'\r\n\r\n\r\n\r\nconst DIV = Style.div`\r\nwidth: 450px;\r\nborder: 1px solid white;\r\npadding: .5%;\r\n`\r\n\r\nconst DIV2 = Style.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: center;\r\nalign-items: center;`\r\n\r\nconst H1 = Style.h4`\r\nmargin-left: 1%;\r\nmargin-right: 1%;\r\ncolor: white;\r\n`\r\nconst H4 = Style.h4`\r\ncolor: white;\r\nmargin: 0;\r\nfont-weight: 200;\r\n\r\n\r\n\r\n`\r\nconst DIV4 = Style.div`\r\n\r\n`\r\n\r\n\r\nconst DIV3 = Style.div`\r\n\r\n`\r\n\r\nconst CREATE = Style.div`\r\nmargin-top: 20px;\r\ndisplay: flex;\r\njustify-content: center;\r\n\r\n\r\n`\r\n\r\nconst FORM = Style.form`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n\r\n\r\n`\r\n\r\nconst INPUT = Style.input`\r\nwidth: 50px;\r\nborder: 1px solid white;\r\nborder-radius: 5px;\r\nheight: 20px;\r\n`\r\n\r\n\r\nconst DIV1 = Style.div`\r\n`\r\n\r\nconst HEADER = Style.div`\r\ndisplay: flex;\r\nfont - family: 'Source Sans Pro', sans - serif;\r\nfont-size: 2.5rem;\r\nfont-weight: 700;\r\ncolor: #009a9a;\r\n\r\n`\r\n\r\nconst BUTTON1 = Style.button`\r\nwidth: 150px;\r\nbackground-color: teal;\r\nborder: none;\r\ncolor: white;\r\nborder-radius: 7px;\r\nheight: 40px;\r\nmargin-bottom:15px;\r\n`\r\n\r\nconst INPUT2 = Style.input`\r\nwidth: 190px;\r\nheight: 30px;\r\n`\r\n\r\n\r\n//fonts \r\n//\r\n\r\n// font - family: 'Poppins', sans - serif;---- regular fonts\r\n\r\n// font - family: 'Source Sans Pro', sans - serif;\r\n\r\n\r\n\r\n\r\nconst CreateTimer = (props) => {\r\n\r\n    const [time, setTime] = useState({\r\n        year: '',\r\n        month: '',\r\n        day: '',\r\n        description: ''\r\n    })\r\n\r\n    const [display, setDisplay] = useState('no-display')\r\n\r\n    const submitHandler = e => {\r\n            e.preventDefault()\r\n\r\n        //defining the date the user entered\r\n        let day = Number(time.day)\r\n        let month = Number(time.month)\r\n        let year = Number(time.year)\r\n\r\n        let customerDate = +new Date(`${year}-${month}-${day}`)\r\n        let myCurrentDate = Date.now()\r\n\r\n\r\n\r\n        if (customerDate > myCurrentDate) {\r\n            let newTime = {\r\n                ...time,\r\n                id: Date.now()\r\n            }\r\n            props.addnewTime(newTime)\r\n        } else {\r\n            setDisplay('display')\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    const changeHandler = e => {\r\n        e.preventDefault();\r\n        return setTime({\r\n            ...time,\r\n            [e.target.name] : e.target.value\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    const hideDisplay = e => {\r\n        e.preventDefault();\r\n        setDisplay('no-display')\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <DIV>\r\n\r\n            <HEADER >\r\n                <DIV1>Countdown</DIV1>\r\n            </HEADER>\r\n\r\n\r\n\r\n\r\n            <CREATE>\r\n                <FORM onSubmit={submitHandler}>\r\n\r\n\r\n                        <DIV3>\r\n                            <INPUT2 className='text-area' type='text' placeholder='Event' onChange={changeHandler} name='description' />\r\n                        </DIV3>\r\n\r\n\r\n\r\n                        <DIV2>\r\n\r\n                            <INPUT type='text' placeholder='month' onChange={changeHandler} name='month'/>\r\n                            <H1>/</H1>\r\n                            <INPUT type='text' placeholder='day' onChange={changeHandler} name='day'/>\r\n                            <H1>/</H1>\r\n                            <INPUT type='text' placeholder='year' onChange={changeHandler} name='year'/>\r\n\r\n                           \r\n\r\n                        </DIV2>\r\n\r\n                        <DIV4 className={display}>\r\n                            <H4>Please Enter a future date</H4>\r\n                            <img alt='x' src={xout} onClick={hideDisplay} className='delete-photo'/>\r\n\r\n                        </DIV4>\r\n\r\n\r\n                 \r\n                        <BUTTON1 type='submit'>Create Event</BUTTON1>\r\n\r\n\r\n                </FORM>\r\n\r\n            </CREATE>\r\n\r\n\r\n        </DIV>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default CreateTimer;\r\n"]},"metadata":{},"sourceType":"module"}