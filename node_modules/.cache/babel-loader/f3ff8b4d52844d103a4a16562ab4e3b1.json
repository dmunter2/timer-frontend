{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Genesis Rig\\\\Desktop\\\\timer_frontend\\\\timer-frontend\\\\timer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\n\nconst TimerFunctionality = ({\n  day,\n  month,\n  year\n}) => {\n  const CalculateTime = () => {\n    const difference = +new Date(`${year}-${month}-${day}` - +new Date());\n    console.log(Date(`${year}-${month}-${day}`));\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor(difference / (1000 * 60 * 60) % 24),\n        minutes: Math.floor(difference / 1000 / 60 % 60),\n        seconds: Math.floor(difference / 1000 % 60)\n      };\n    }\n\n    return timeleft;\n  };\n\n  const _useState = useState(calculatTimeleft()),\n        _useState2 = _slicedToArray(_useState, 2),\n        timeLeft = _useState2[0],\n        setTimeLeft = _useState2[1];\n};\n\nexport default TimerFunctionality;","map":{"version":3,"sources":["C:/Users/Genesis Rig/Desktop/timer_frontend/timer-frontend/timer/src/components/TimerFunctionality.js"],"names":["React","TimerFunctionality","day","month","year","CalculateTime","difference","Date","console","log","timeLeft","days","Math","floor","hours","minutes","seconds","timeleft","useState","calculatTimeleft","setTimeLeft"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA,KAAN;AAAaC,EAAAA;AAAb,CAAD,KAAwB;AAG/C,QAAMC,aAAa,GAAG,MAAM;AACxB,UAAMC,UAAU,GAAG,CAAC,IAAIC,IAAJ,CAAU,GAAEH,IAAK,IAAGD,KAAM,IAAGD,GAAI,EAAxB,GAA4B,CAAC,IAAIK,IAAJ,EAAtC,CAApB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAE,GAAEH,IAAK,IAAGD,KAAM,IAAGD,GAAI,EAAzB,CAAhB;;AAEA,QAAII,UAAU,GAAG,CAAjB,EAAoB;AAChBI,MAAAA,QAAQ,GAAG;AACPC,QAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWP,UAAU,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAArB,CADC;AAEPQ,QAAAA,KAAK,EAAEF,IAAI,CAACC,KAAL,CAAYP,UAAU,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAX,GAAkC,EAA7C,CAFA;AAGPS,QAAAA,OAAO,EAAEH,IAAI,CAACC,KAAL,CAAYP,UAAU,GAAG,IAAb,GAAoB,EAArB,GAA2B,EAAtC,CAHF;AAIPU,QAAAA,OAAO,EAAEJ,IAAI,CAACC,KAAL,CAAYP,UAAU,GAAG,IAAd,GAAsB,EAAjC;AAJF,OAAX;AAMH;;AAED,WAAOW,QAAP;AAGH,GAjBD;;AAH+C,oBAwBfC,QAAQ,CAACC,gBAAgB,EAAjB,CAxBO;AAAA;AAAA,QAwBxCT,QAxBwC;AAAA,QAwB9BU,WAxB8B;AA4BlD,CA5BD;;AA8BA,eAAenB,kBAAf","sourcesContent":["import React from 'react';\r\n\r\nconst TimerFunctionality = ({day, month, year}) => {\r\n\r\n\r\n    const CalculateTime = () => {\r\n        const difference = +new Date(`${year}-${month}-${day}` - +new Date());\r\n\r\n        console.log(Date(`${year}-${month}-${day}`))\r\n\r\n        if (difference > 0) {\r\n            timeLeft = {\r\n                days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n                hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n                minutes: Math.floor((difference / 1000 / 60) % 60),\r\n                seconds: Math.floor((difference / 1000) % 60)\r\n            };\r\n        }\r\n\r\n        return timeleft;\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const [timeLeft, setTimeLeft] = useState(calculatTimeleft())\r\n\r\n\r\n\r\n}\r\n\r\nexport default TimerFunctionality;\r\n\r\n"]},"metadata":{},"sourceType":"module"}